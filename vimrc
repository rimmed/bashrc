set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'tpope/vim-fugitive'
Plugin 'MattesGroeger/vim-bookmarks'
Plugin 'flazz/vim-colorschemes'

" Plugin 'vim-scripts/DfrankUtil'
" Plugin 'vim-scripts/vimprj'
" Plugin 'vim-scripts/indexer.tar.gz'
Plugin 'vim-scripts/grep.vim'

Plugin 'git://git.enlightenment.org/editors/vim-configs.git'
Plugin 'https://github.com/tpope/vim-pathogen'
Plugin 'https://github.com/Valloric/YouCompleteMe'

" Add maktaba and codefmt to the runtimepath.
" (The latter must be installed before it can be used.)
Plugin 'google/vim-maktaba'
Plugin 'google/vim-codefmt'
" Also add Glaive, which is used to configure codefmt's maktaba flags. See
" `:help :Glaive` for usage.
Plugin 'google/vim-glaive'

Plugin 'junegunn/limelight.vim'

call vundle#end()            " required
filetype plugin indent on    " required

"–ù–ê–°–¢–†–û–ô–ö–ò –í–ù–ï–®–ù–ï–ì–û –í–ò–î–ê –ò –ë–ê–ó–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –†–ï–î–ê–ö–¢–û–†–ê
"=====================================================================
" –æ—Ç–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º Vi
set nocompatible
" —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –≤–Ω–∏–∑—É –∏ –≤–≤–µ—Ä—Ö—É —ç–∫—Ä–∞–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–µ
set scrolloff=3
" –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
set autoread
" –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ —Ü–≤–µ—Ç–æ–≤ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ
set t_Co=256
" –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—á—Ü–µ —Å—Ç—Ä–æ–∫–∏
au BufNewFile,BufRead * let b:mtrailingws=matchadd('ErrorMsg', '\s\+$', -1)
" –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
au BufNewFile,BufRead,WinEnter * let b:mtrailingws=matchadd('ErrorMsg', '\s\+$', -1)
" –ø–æ–¥—Å–≤–µ—Ç–∫–∞ if –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞
au BufNewFile,BufRead,WinEnter * let b:mtrailingws=matchadd('ErrorMsg', 'if(', -1)
" –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Ç–∞–±—É–ª—è—Ü–∏–∏
au BufNewFile,BufRead,WinEnter * let b:mtrailingws=matchadd('ErrorMsg', '	', -1)

"–ü—Ä–æ–±–ª–µ–º–∞ –∫—Ä–∞—Å–Ω–æ–≥–æ –Ω–∞ –∫—Ä–∞—Å–Ω–æ–º –ø—Ä–∏ spellchecking-–µ —Ä–µ—à–∞–µ—Ç—Å—è —Ç–∞–∫
highlight SpellBad ctermfg=Black ctermbg=Red
" —Ö—Ä–∞–Ω–∏—Ç—å –±–æ–ª—å—à–µ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥
set history=128
" –Ω—É–º–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–æ–∫
set number
" –≤–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
syntax on
" –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
set clipboard=unnamed
" –ø–æ–∏—Å–∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –ø–æ –º–µ—Ä–µ –µ–≥–æ –Ω–∞–±–æ—Ä–∞
set incsearch
" (–Ω–µ)–ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ (–ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–∏—Å–∫ –∑–∞–∫–æ–Ω—á–µ–Ω –∏ –∑–∞–∫—Ä—ã—Ç)
set hlsearch  " nohlsearch
nmap <C-G> <esc>:nohlsearch<cr>
vmap <C-G> <esc>:nohlsearch<cr>

" highlight current line
set cursorline

" –ø–æ–∫–∞–∑–∞—Ç—å –Ω–µ–ø–µ—á–∞—Ç–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã
"set listchars=tab:¬ª\ ,eol:¬∂,trail: ‚ò¢`
" —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞
colorscheme Monokai
" –ª–∏–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª—å
set colorcolumn=81
" –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
set encoding=utf8
" –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞, –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è
" –≤—ã–≤–æ–¥–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
set termencoding=utf-8
" –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.
set fileencodings=utf8,cp1251
" –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–ø-—Ñ–∞–π–ª (–≤ –Ω–µ–≥–æ —Å–∫–∏–¥—ã–≤–∞—é—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–µ –±—É—Ñ–µ—Ä—ã)
set noswapfile
" –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VIM –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
autocmd! bufwritepost $MYVIMRC source $MYVIMRC

" remap default keymap layout to russian –π—Ü—É–∫–µ–Ω
set keymap=russian-jcukenwin
set iminsert=0
set imsearch=0

" —Å—Ç—Ä–µ–ª–∫–∏ —Ç–∞–±—É
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
noremap <Home> <NOP>
noremap <End> <NOP>
noremap <Delete> <NOP>
inoremap <Up> <NOP>
inoremap <Down> <NOP>
inoremap <Left> <NOP>
inoremap <Right> <NOP>
inoremap <Home> <NOP>
inoremap <End> <NOP>
inoremap <Delete> <NOP>

"–ù–ê–°–¢–†–û–ô–ö–ò –û–¢–°–¢–£–ü–ê
"=====================================================================
" —Ä–∞–∑–º–µ—Ä –æ—Ç—Å—Ç—É–ø–æ–≤
set sw=3
" —à–∏—Ä–∏–Ω–∞ —Ç–∞–±—É–ª—è—Ü–∏–∏
set ts=3
" —à–∏—Ä–∏–Ω–∞ '–º—è–≥–∫–æ–≥–æ' —Ç–∞–±–∞
set sts=3
" ai - –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–æ—Ç—Å—Ç—É–ø—ã (–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –æ—Ç—Å—Ç—É–ø –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–æ–∫–∏)
"set autoindent
" si –í–∫–ª—é—á–∞–µ–º '—É–º–Ω—É—é' –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É –æ—Ç—Å—Ç—É–ø–æ–≤
"set smartindent
" Wrap lines
set wrap
" –í–∫–ª—é—á–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –≤ —Å—Ç–∏–ª–µ –°
"set cindent
set smartindent
" –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Ç–∞–±—É–ª—è—Ü–∏—é –≤ –ø—Ä–æ–±–µ–ª—ã
set expandtab
"au FileType cpp,lua setlocal noexpandtab sw=4 ts=4 sts=4 syntax=cpp
au FileType edc setlocal expandtab sw=3 ts=8 sts=3 syntax=edc
au FileType sh setlocal noexpandtab sw=4 ts=4 sts=4 syntax=sh
au FileType tex setlocal noexpandtab sw=4 ts=4 sts=4 syntax=tex
au FileType python setlocal noexpandtab sw=4 ts=4 sts=4 softtabstop=4 syntax=python
au FileType c,h setlocal syntax=cpp expandtab ts=8 sw=3 sts=3 cino=>5n-3f0^-2{2(0W1st0
au FileType cpp,hpp,proto AutoFormatBuffer clang-format
au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc

call glaive#Install()
Glaive codefmt plugin[mappings]
Glaive codefmt clang_format_style="file"

" Use Unix as the standard file type
set ffs=unix,dos,mac

"====================================================================
" –ù–µ—Å–∫–æ–ª—å–∫–æ —É–¥–æ–±–Ω—ã—Ö –±–∏–Ω–¥–∏–Ω–≥–æ–≤ –¥–ª—è –°, EDC
au FileType c,cc,c,edc inoremap {<CR> {<CR>}<Esc>O
au FileType c,cc,c,edc inoremap #d #define
au FileType c,cc,c,edc inoremap #u #undef
au FileType c,cc,c,edc inoremap #e #endif /*  */<Esc>hhi
au FileType c,cc,c,edc inoremap #" #include ""<Esc>i
au FileType c,cc,c,edc inoremap #< #include <><Esc>i
au FileType c,cc,c,edc inoremap #f /* FIXME:  */<Esc>hhi
au FileType c,cc,c,edc inoremap #t /*TODO:  */<Esc>hhi
au FileType c,cc,c,edc inoremap ;; <END>;<CR>
"au FileType c,cc,c,edc inoremap " ""<Left>
"au FileType c,cc,c,edc inoremap ' ''<Left>
"au FileType c,cc,c,edc inoremap ( ()<Left>
"au FileType c,cc,c,edc inoremap [ []<Left>
"au FileType c,cc,c,edc inoremap (; ();<CR>
"au FileType c,cc,c,edc inoremap ({ () {<CR>}<Esc>O
au FileType c,cc,c,edc inoremap /*<Space> /*  */<Esc>3ha

" –ë–∏–Ω–¥–∏–Ω–≥–∏ –¥–ª—è Doxygen
au FileType c,h,edc inoremap @p @param
au FileType c,h,edc inoremap @r @return
au FileType c,h,edc inoremap @dg @defgroup
au FileType c,h,edc inoremap @ig @ingroup

au FileType eo inoremap @p @property

" –ë–∏–Ω–¥–∏–Ω–≥–∏ –¥–ª—è LaTeX
au FileType tex inoremap %- %---------------------------------------------------------------------------<CR>
au FileType tex inoremap %= %===========================================================================<CR>
au FileType tex inoremap { {}<Left>
au FileType tex inoremap \bei \begin{itemize}<CR>
au FileType tex inoremap \ei \end{itemize}<CR>
au FileType tex inoremap \bee \begin{enumerate}<CR>
au FileType tex inoremap \ee \end{enumerate}<CR>
au FileType tex inoremap \it \item

"====================================================================
" F2 —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª
nmap <F2> :w<cr>
vmap <F2> <esc>:w<cr>i
imap <F2> <esc>:w<cr>i

" F3 - —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º (–ø–ª–∞–≥–∏–Ω grep.vim)
nnoremap <silent> <F3> :Rgrep<cr>

" F9
nnoremap <F9> :set nolist<cr>

" F11
nnoremap <F11> :set list<cr>

" close the current buffer by Alt+w
nnoremap w <esc>:bdelete<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => NERDTree
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <leader>n :NERDTreeToggle<CR>
let g:NERDTreeWinPos = "right"

let NERDTreeHighlightCursorline=1
let NERDTreeDirArrows=0
let NERDTreeIgnore=['\.lo$', '\.la$', '\.o$', '\.edj$', '\.eo.h$', '\.eo.c$']
let NERDTreeWinPos="right"


" bookmarks
let g:bookmark_highlight_lines = 1


set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
let g:airline#extensions#branch#enabled=1
let g:airline#extensions#tabline#buffer_idx_mode = 1
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>- <Plug>AirlineSelectPrevTab
nmap <leader>+ <Plug>AirlineSelectNextTab

if !exists('g:airline_symbols')
   let g:airline_symbols = {}
endif

function! AirlineInit()
   let g:airline_section_a = airline#section#create(['mode', ' ', 'branch'])
   let g:airline_section_b = airline#section#create_left(['ffenc', 'hunks', '%f'])
   let g:airline_section_c = airline#section#create(['filetype'])
   let g:airline_section_x = airline#section#create(['%P'])
   let g:airline_section_y = airline#section#create(['%B'])
   let g:airline_section_z = airline#section#create_right(['%l','%c'])
endfunction

let g:ycm_always_populate_location_list = 1
let g:ycm_extra_conf_globlist = ['~/Work/*','!~/*']
